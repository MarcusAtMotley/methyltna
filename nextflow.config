/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Motleybio-organization/methyltna Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // Input options
    input                      = null

    // BCL demultiplexing options
    bcl_input_dir              = null
    bcl_samplesheet            = null
    demultiplexer              = 'bclconvert' // bclconvert or bcl2fastq

    // Read processing options
    skip_trimming              = false
    trim_quality               = null      // Phred quality score threshold (alternative to trim_nextseq)
    trim_min_length            = 20        // Minimum read length after trimming
    trim_nextseq               = 20        // NextSeq/NovaSeq 2-color chemistry quality trimming threshold
    trim_adapter               = null      // Custom adapter sequence
    trim_stringency            = 1         // Adapter overlap required for trimming

    // RNA barcode extraction options
    skip_rna_deconvolution     = false     // Skip RNA barcode deconvolution
    rna_barcode_config         = "${projectDir}/assets/runner_settings_readStart_EM_e0.0.yaml"      // Path to YAML config file for barcode extraction
    rna_barcode_rev_comp       = false     // Enable reverse complement search for RNA barcodes (auto-enabled for methylation analysis)
    rna_adapter_name           = 'NNSR'    // Barcode adapter name
    rna_adapter_sequence       = null      // Custom barcode adapter sequence
    rna_error_rate             = 0.0       // Maximum error rate for barcode matching
    rna_min_overlap            = 10        // Minimum overlap length for barcode detection
    rna_barcode_action         = 'lowercase' // Action to perform on detected barcodes

    // METHYLSNP analysis options
    skip_methylsnp_analysis    = false     // Skip methylation SNP analysis
    skip_fastqc                = false     // Skip FastQC on raw reads (pre-processing QC)

    // Reference genome options (organism-agnostic design)
    genome_fasta               = "gs://motleybio/Resources/reference_genome/GRCh38_full_analysis_set_plus_decoy_hla.fa"
    transcriptome_fasta        = "gs://motleybio/Resources/RSEM_Genome/RSEM_hg38.transcripts.fa"
    annotation_gtf             = "gs://motleybio/Resources/GTF/Homo_sapiens.GRCh38.112.chr_label.gtf"

    // Pre-built index options (skip building if provided)
    star_index                 = null      // Path to pre-built STAR genome index directory
    bowtie2_index              = null      // Path to pre-built Bowtie2 genome index directory
    biscuit_index              = null      // Path to pre-built Biscuit genome index directory
    force_rebuild_indexes      = false     // Force rebuilding of indexes even if cached versions exist
    force_redownload_references = false    // Force re-downloading of reference files even if cached versions exist

    // Reference caching
    reference_cache_dir        = "${baseDir}/references"  // Where to cache downloaded/built references

    // MultiQC options
    multiqc_config             = null
    multiqc_title              = null
    multiqc_logo               = null
    max_multiqc_email_size     = '25.MB'
    multiqc_methods_description = null

    // Email configuration
    smtp_host                  = null      // SMTP server hostname (e.g., smtp.gmail.com)
    smtp_port                  = 587       // SMTP server port
    smtp_user                  = null      // SMTP username (usually email address)
    smtp_password              = null      // SMTP password or app password

    // Boilerplate options
    outdir                       = null
    publish_dir_mode             = 'copy'
    email                        = null
    email_on_fail                = null
    plaintext_email              = false
    monochrome_logs              = false
    hook_url                     = null
    help                         = false
    help_full                    = false
    show_hidden                  = false
    version                      = false
    pipelines_testdata_base_path = 'https://raw.githubusercontent.com/nf-core/test-datasets/'
    trace_report_suffix          = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')// Config options
    config_profile_name        = null
    config_profile_description = null

    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_contact     = null
    config_profile_url         = null

    // Schema validation default options
    validate_params            = true
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
    light {
        includeConfig 'conf/light.config'
    }
    debug {
        dumpHashes              = true
        process.beforeScript    = 'echo $HOSTNAME'
        cleanup                 = false
        nextflow.enable.configProcessNamesValidation = true
    }
    conda {
        conda.enabled           = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        conda.channels          = ['conda-forge', 'bioconda']
        apptainer.enabled       = false
    }
    mamba {
        conda.enabled           = true
        conda.useMamba          = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    docker {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u $(id -u):$(id -g)'
    }
    arm {
        docker.runOptions       = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled     = true
        singularity.autoMounts  = true
        conda.enabled           = false
        docker.enabled          = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    podman {
        podman.enabled          = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    shifter {
        shifter.enabled         = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    charliecloud {
        charliecloud.enabled    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        apptainer.enabled       = false
    }
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
    }
    wave {
        apptainer.ociAutoPull   = true
        singularity.ociAutoPull = true
        wave.enabled            = true
        wave.freeze             = true
        wave.strategy           = 'conda,container'
    }
    gpu {
        docker.runOptions       = '-u $(id -u):$(id -g) --gpus all'
        apptainer.runOptions    = '--nv'
        singularity.runOptions  = '--nv'
    }
    test      { includeConfig 'conf/test.config'      }
    test_full { includeConfig 'conf/test_full.config' }
}

// Load nf-core custom profiles from different institutions

// If params.custom_config_base is set AND either the NXF_OFFLINE environment variable is not set or params.custom_config_base is a local path, the nfcore_custom.config file from the specified base path is included.
// Load Motleybio-organization/methyltna custom profiles from different institutions.
includeConfig params.custom_config_base && (!System.getenv('NXF_OFFLINE') || !params.custom_config_base.startsWith('http')) ? "${params.custom_config_base}/nfcore_custom.config" : "/dev/null"


// Load Motleybio-organization/methyltna custom profiles from different institutions.
// Custom pipeline-specific config can be added at https://github.com/nf-core/configs
// includeConfig params.custom_config_base && (!System.getenv('NXF_OFFLINE') || !params.custom_config_base.startsWith('http')) ? "${params.custom_config_base}/pipeline/methyltna.config" : "/dev/null"

// Set default registry for Apptainer, Docker, Podman, Charliecloud and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Charliecloud / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry    = 'quay.io'
docker.registry       = 'quay.io'
podman.registry       = 'quay.io'
singularity.registry  = 'quay.io'
charliecloud.registry = 'quay.io'



// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Mail configuration for portable email notifications
// Configure with environment variables, parameters, or override in personal config
mail {
    // SMTP configuration - supports Gmail, Outlook, SendGrid, AWS SES SMTP, etc.
    smtp {
        host = System.getenv('SMTP_HOST') ?: params.smtp_host ?: 'smtp.gmail.com'
        port = (System.getenv('SMTP_PORT') ?: params.smtp_port ?: 587) as Integer
        user = System.getenv('SMTP_USER') ?: params.smtp_user ?: params.email
        password = System.getenv('SMTP_PASSWORD') ?: params.smtp_password
        auth = true
        starttls {
            enable = true
            required = true
        }
    }

    // Alternative: Use AWS SES native API if configured
    // aws {
    //     accessKey = System.getenv('AWS_ACCESS_KEY_ID')
    //     secretKey = System.getenv('AWS_SECRET_ACCESS_KEY')
    //     region = System.getenv('AWS_DEFAULT_REGION') ?: 'us-east-1'
    // }
}

// Set bash options
process.shell = [
    "bash",
    "-C",         // No clobber - prevent output redirection from overwriting files.
    "-e",         // Exit if a tool returns a non-zero status/exit code
    "-u",         // Treat unset variables and parameters as an error
    "-o",         // Returns the status of the last command to exit..
    "pipefail"    //   ..with a non-zero status or zero if all successfully execute
]

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${params.trace_report_suffix}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${params.trace_report_suffix}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${params.trace_report_suffix}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${params.trace_report_suffix}.html"
}

manifest {
    name            = 'Motleybio-organization/methyltna'
    contributors    = [
        [
            name: 'Marcus Viscardi',
            affiliation: 'Motley Bio',
            email: 'marcus@motleybio.io',
            github: 'MarcusAtMotley',
            contribution: ['author', 'maintainer'],
            orcid: ''
        ],
    ]
    homePage        = 'https://github.com/Motleybio-organization/methyltna'
    description     = """TNA-EM-seq analysis pipeline: Combined transcriptome and methylome sequencing with RNA/DNA barcode separation"""
    mainScript      = 'main.nf'
    defaultBranch   = 'master'
    nextflowVersion = '!>=24.10.5'
    version         = '1.0.0dev'
    doi             = ''
}

// Nextflow plugins
plugins {
    id 'nf-schema@2.4.2' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

validation {
    defaultIgnoreParams = ["genomes"]
    monochromeLogs = params.monochrome_logs
    help {
        enabled = true
        command = "nextflow run Motleybio-organization/methyltna -profile <docker/singularity/.../institute> --input samplesheet.csv --outdir <OUTDIR>"
        fullParameter = "help_full"
        showHiddenParameter = "show_hidden"
    }
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'
